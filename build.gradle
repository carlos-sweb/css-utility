import groovy.json.JsonSlurper 
// -------------------------------------------------------------------------------
tasks.register('screen'){
	doLast {			

		println "hello i am screen"

	}
};
// -------------------------------------------------------------------------------
tasks.register('css-init') {	
    doLast {
    	// BUSCAMOS EL ARCHIVO DE CONFIGURACIÃ“N
		def inputFile = new File("pp-style.json")
		// ANALIZAMOS EL ARCHIVO JSON
		def json = new JsonSlurper().parseText(inputFile.text)		
		// REVISAMOS QUE ESTE LA VARIABLE SCREEN 
		if ( json.containsKey("screen") ) {
			// ASIGNAMOS UN NUEVO ARCHIVO
			def screenFile = new File("master/screen.scss")
			// CREAMOS EL NUEVO ARCHIVO
			screenFile.createNewFile()
			// CREAMOS LA CADENA QUE ESCRIBIREMOS
			String cadena = '$screen:(\n';
			// CREAMOS LA CADENA QUE ESCRIBIREMOS

			json.screen.eachWithIndex { nameScreen, item , index ->								
				
				//GRABAMOS EL CONTENIDO
				//cadena += '	'+nameScreen+':(max:'+item.max+'px),\n';
				if( json.screen[nameScreen].containsKey('max') ){
					cadena += nameScreen+":(max:"+item.max+")";
					if( json.screen.size() > ( index +1 ) ){
						cadena += ","
					}
					cadena += "\n";
				};
			};
			// CREARRMOS LA CADENA
			cadena += ');';
			// ESCRIBIMOS LA CADENA
			screenFile.write( cadena );
			// INFORMAMOS EN PANTALLA QUE SE HA CREADO EL ARCHIVO SCREEN.SCSS
			println 'created file screen.scss'
		}
		// REVISAMOS QUE ESTE LA VARIABLE SCREEN 
		// -------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------
		// REVISAMOS QUE ESTE LA VARIABLE PROPERTY
		if( json.containsKey("property") ){
			// RECOREMOS LA PROPIEDAD
			json.property.eachWithIndex { name , item , index ->				
				// creamos el directorio
				def p_folder = new File('master/'+name);
				// verificamos si extra creado el directorio
				if( !p_folder.exists() ){
					 p_folder.mkdirs()
				}
				// <!--------------------
				// SI LOS ARCHIVOS ESTARAN COMPRIMIDOS	
				Boolean compress = true;
				// verificamos que la variable compress este creada 
				// si no esta creada colocaremos la variable tru
				if( json.property[name].containsKey("compress") ){
					// si esta creada colocamos la variable que viene del archivo
					compress = json.property[name].compress;
				}
				// <!--------------------
				// VERIFICAREMOS PARA LOS SCREEN QUE SE NECESITAN
				def p_screen = [];
				// revisamos que este creada la llave y asignamos los 
				// valores
				if( json.property[name].containsKey("screen") ){

					p_screen = json.property[name].screen;
					
				}
				// <!--------------------
				if( json.property[name].containsKey("attr") ){
					
					json.property[name].attr.eachWithIndex { _name , _item , _index ->						

						def attr_file = new File('master/'+name+"/"+_name+".scss");

						String attr_cadena = '@import "../screen.scss";\n';						

						String attr_cadena_array = '';						

						json.property[name].attr[_name].eachWithIndex { __name, __item , __index ->


							attr_cadena_array += __name+':'+__item;

							if( json.property[name].attr[_name].size() > (__index +1) ){

								attr_cadena_array += ",";

							}

						};												
					
						attr_cadena += '@each $key, $value in ('+attr_cadena_array+'){\n';

						attr_cadena += '	.#{$key}{\n';

						attr_cadena += '		'+_name+':#{$value};\n';

						attr_cadena += '	}\n';

						attr_cadena += '};\n'


						attr_cadena += '@each $sizeScreen, $pixel in $screen{\n';						
						attr_cadena += '	@media (min-width: #{map-get($pixel,max)}#{px}) {\n';
						attr_cadena += '		@each $key, $value in ('+attr_cadena_array+'){\n';
						attr_cadena += '			.#{$sizeScreen}-#{$key}{\n';
						attr_cadena += '				'+_name+':#{$value};\n';
						attr_cadena += '			}\n';
						attr_cadena += '		}\n';
						attr_cadena += '	}\n';
						attr_cadena += '}\n';						

						attr_file.createNewFile();

						attr_file.write(attr_cadena);						

						exec{
							if( compress ){
								commandLine 'sass','--no-source-map','master/'+name+'/'+_name+'.scss','dist/'+name+'/'+_name+'.min.css','--style','compressed'	
							}else{
								commandLine 'sass','--no-source-map','master/'+name+'/'+_name+'.scss','dist/'+name+'/'+_name+'.css'
							}
							
						}

					}

					println 'Tienen attr para aplicar'								
				}
				// <!--------------------							
			}			
		}
		// -------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------

    	println 'Done'
    }
}